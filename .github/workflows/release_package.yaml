name: Build and publish a new package
on:
  release:
    types:
      - published
permissions:
  contents: write
jobs:
  new_image_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Get latest release tag
        run: |
          repo_user=$(echo ${{ github.repository }} | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          repo_name=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          release_url="https://api.github.com/repos/$repo_user/$repo_name/releases/latest"
          release_tag=$(curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$release_url" | jq -r ".tag_name")
          echo "LATEST_RELEASE_TAG=$release_tag" >> $GITHUB_ENV
          echo "REPO_NAME=$repo_name" >> $GITHUB_ENV
          echo "REPO_USER=$repo_user" >> $GITHUB_ENV
          if [[ -z "$release_tag" ]]; then echo "variable release_tag is empty!" && exit 1; fi
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Bump version in pyproject.toml
        run: |
          NEW_VERSION=${{ env.LATEST_RELEASE_TAG }}
          sed -i "" "s/\(version = \"\)[^\"]*\"/\1$NEW_VERSION\"/" pyproject.toml
      - name: Commit pyproject.toml to repo
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ./pyproject.toml
          # Check for changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update package version [skip ci]"
          git push
      - name: Build package
        run: python -m build
      - name: Upload Release Asset
        run: |
          gh release upload ${{ env.LATEST_RELEASE_TAG }} \
          helmYAMLizer_VioletCranberry-${{ env.LATEST_RELEASE_TAG }}-py3-none-any.whl
          gh release upload ${{ env.LATEST_RELEASE_TAG }} \
           helmYAMLizer_VioletCranberry-${{ env.LATEST_RELEASE_TAG }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
