name: Generate coverage badge
on:
  push:
    branches:
      - master
      - main
    paths:
      - '**.py'
permissions:
  contents: write
jobs:
  unittest_badge_gen:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint anybadge
          pip install -r tests/test-requirements.txt
      - name: Generate coverage report
        run: |
          python -m coverage run -m unittest discover -v
          python -m coverage report > coverage_output.log
      - name: Generate badge
        run: |
          mkdir -p ./.github/badges
          SCORE=$(grep 'TOTAL' coverage_output.log | awk '{print substr($NF, 1, length($NF)-1)}')
          anybadge --value=$SCORE --suffix='%' --file=./.github/badges/coverage.svg --label=coverage \
          --overwrite --value=$SCORE 50=red 60=orange 80=yellow 90=green
          echo "Coverage Score: $SCORE%"
      - name: Commit badge to repo
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ./.github/badges/coverage.svg
          # Check for changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update unittest badge [skip ci]"
          git pull --rebase
          git push
